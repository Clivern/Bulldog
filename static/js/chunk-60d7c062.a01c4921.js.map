{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/php/php.js","webpack:///./node_modules/codemirror/mode/clike/clike.js","webpack:///./node_modules/codemirror/mode/go/go.js","webpack:///./node_modules/codemirror/addon/mode/simple.js","webpack:///./node_modules/codemirror/mode/css/css.js","webpack:///./node_modules/codemirror/mode/ruby/ruby.js","webpack:///./node_modules/codemirror/mode/rust/rust.js","webpack:///./src/assets/logo.png","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack:///./node_modules/codemirror/mode/python/python.js","webpack:///./node_modules/codemirror/mode/javascript/javascript.js"],"names":["mod","CodeMirror","keywords","str","obj","words","split","i","length","matchSequence","list","end","escapes","phpString","stream","state","patterns","match","tokenize","slice","closing","phpString_","escaped","eol","tokStack","pop","next","phpKeywords","phpAtoms","phpBuiltin","registerHelper","join","phpConfig","name","helperType","blockKeywords","defKeywords","atoms","builtin","multiLineStrings","hooks","eatWhile","before","quoted","eat","delim","current","push","_stream","defineMode","config","parserConfig","htmlMode","getMode","phpMode","dispatch","isPHP","curMode","sol","pending","php","curState","html","context","prev","token","startState","indent","style","pos","m","cur","openPHP","search","test","backUp","startOpen","copyState","htmlNew","phpNew","textAfter","line","blockCommentStart","blockCommentEnd","lineComment","innerMode","mode","defineMIME","Context","indented","column","type","info","align","this","pushContext","col","popContext","t","typeBefore","prevToken","string","typeAtEndOfLine","indentation","isTopScope","contains","word","propertyIsEnumerable","curPunc","isDefKeyword","indentUnit","statementIndentUnit","dontAlignCalls","types","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","isReservedIdentifier","tokenBase","ch","result","tokenString","tokenComment","skipToEnd","quote","maybeEnd","maybeEOL","typeFirstDefinitions","basecolumn","startOfLine","ctx","eatSpace","start","undefined","styleDefs","Pass","firstChar","charAt","dontIndentStatements","hook","switchBlock","allmanIndentation","electricInput","blockCommentContinue","fold","cKeywords","cppKeywords","objCKeywords","objCBuiltins","basicCTypes","basicObjCTypes","cTypes","identifier","objCTypes","cBlockKeywords","cDefKeywords","cppHook","peek","pointerHook","cIsReservedIdentifier","toLowerCase","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","replace","RegExp","def","mimes","add","prop","hasOwnProperty","tokenTripleString","tokenNestedComment","depth","tokenKotlinString","tripleString","skipTo","modeProps","cx","closeBrackets","pairs","triples","intendSwitch","stringTokenizer","tokenCeylonString","first","toUpperCase","electricChars","ensureState","states","Error","toRegex","val","caret","flags","ignoreCase","unicode","source","String","asToken","apply","Rule","data","regex","tokenFunction","pend","shift","text","local","tok","endToken","localState","endScan","index","rule","matches","stack","enterLocalMode","dedent","j","cmp","a","b","props","spec","pers","persistent","p","persistentStates","lState","forceEnd","indexOf","arr","indentFunction","meta","dontIndentStates","rules","scan","dedentIfLineStart","defineSimpleMode","simpleMode","states_","hasIndentation","orig","s","keySet","array","keys","inline","propertyKeywords","resolveMode","override","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","supportsAtComponent","highlightNonStandardPropertyKeywords","ret","tp","tokenParenthesized","pass","popAndPass","n","wordAsValue","stateArg","top","atBlock","base","Math","max","documentTypes_","mediaTypes_","mediaFeatures_","mediaValueKeywords_","propertyKeywords_","nonStandardPropertyKeywords_","fontProperties_","counterDescriptors_","colorKeywords_","valueKeywords_","allWords","concat","tokenCComment","wordObj","o","e","keywordList","indentWords","dedentWords","opening","chain","newtok","readBlockComment","readQuoted","regexpAhead","embed","readHereDoc","varList","lastTok","more","found","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","unescaped","phrase","mayIndent","continuedLine","kwtype","thisTok","ct","closed","string_raw","string_raw_hash","comment","module","exports","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","inText","parser","ok","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","closure","isInAttribute","terminator","lower","noIndent","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","grabbers","configuration","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","reverse","mimeModes","defaultTags","script","maybeBackup","pat","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","getTagRegexp","anchored","addTags","from","to","tag","dest","unshift","findMatchingMode","tagInfo","tagText","tags","configTags","configScript","scriptTypes","htmlState","modeSpec","endTagA","endTag","localMode","wordRegexp","wordOperators","commonKeywords","commonBuiltins","scopes","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","splice","hangingIndent","myKeywords","myBuiltins","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","builtins","lastToken","scopeOffset","offset","lineOffset","pushPyScope","errorToken","tokenBaseInner","inFormat","floatLiteral","intLiteral","isFmtString","formatStringFactory","tokenStringFactory","delimiter","tokenOuter","substr","singleline","OUTCLASS","tokenNestedExpr","inner","singleLineStringErrors","isString","pushBracketScope","tokenLexer","beginningOfLine","lambda","delimiter_index","external","addErr","scope","content","statementIndent","jsonldMode","jsonld","jsonMode","json","trackScope","isTS","typescript","wordRE","wordCharacters","kw","A","B","C","D","operator","atom","isJsonldKeyword","readRegexp","inSet","cont","expressionAllowed","tokenQuasi","lexical","lastType","brackets","findFatArrow","fatArrowAt","arrow","sawSomething","bracket","atomicTypes","JSLexical","inScope","varname","v","localVars","vars","parseJS","cc","marked","combinator","expression","statement","lex","arguments","inList","register","block","newContext","registerVarScoped","Var","globalVars","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","outer","poplex","expect","wanted","exp","value","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","property","continueQuasi","targetNoComma","target","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprops","typearg","maybeReturnType","quasiType","typeprop","functiondecl","continueQuasiType","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","c","doubleIndentSwitch","skipExpression","StringStream"],"mappings":"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","file":"js/chunk-60d7c062.a01c4921.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // Helper for phpString\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n  function phpString(closing, escapes) {\n    return function(stream, state) { return phpString_(stream, state, closing, escapes); };\n  }\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    }\n\n    // Simple syntax\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([\n          [[\"[\", null]],\n          [[/\\d[\\w\\.]*/, \"number\"],\n           [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"],\n           [/[\\w\\$]+/, \"variable\"]],\n          [[\"]\", null]]\n        ], closing, escapes);\n      }\n      if (stream.match(/^->\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([\n          [[\"->\", null]],\n          [[/[\\w]+/, \"variable\"]]\n        ], closing, escapes);\n      }\n      return \"variable-2\";\n    }\n\n    var escaped = false;\n    // Normal string\n    while (!stream.eol() &&\n           (escaped || escapes === false ||\n            (!stream.match(\"{$\", false) &&\n             !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false)))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop(); state.tokStack.pop();\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" +\n    \"do else elseif enddeclare endfor endforeach endif endswitch endwhile enum extends final \" +\n    \"for foreach function global goto if implements interface instanceof namespace \" +\n    \"new or private protected public static switch throw trait try use var while xor \" +\n    \"die echo empty exit eval include include_once isset list require require_once return \" +\n    \"print unset __halt_compiler self static parent yield insteadof finally readonly match\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage memory_get_peak_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class enum function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function(stream, state) {\n        var before;\n        if (before = stream.match(/^<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n        return false;\n      },\n      \"#\": function(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n        return \"comment\";\n      },\n      \"/\": function(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n          return \"comment\";\n        }\n        return false;\n      },\n      '\"': function(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length)\n          state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 &&\n            !--state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n        return false;\n      }\n    }\n  };\n\n  CodeMirror.defineMode(\"php\", function(config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, (parserConfig && parserConfig.htmlMode) || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"))\n          state.curState = state.php;\n          return \"meta\";\n        }\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n        if (state.pending) state.pending = null;\n        var cur = stream.current(), openPHP = cur.search(/<\\?/), m;\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];\n          else state.pending = {end: stream.pos, style: style};\n          stream.backUp(cur.length - openPHP);\n        }\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function() {\n        var html = CodeMirror.startState(htmlMode)\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null\n        return {html: html,\n                php: php,\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\n                curState: parserConfig.startOpen ? php : html,\n                pending: null};\n      },\n\n      copyState: function(state) {\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php, phpNew = php && CodeMirror.copyState(phpMode, php), cur;\n        if (state.curMode == htmlMode) cur = htmlNew;\n        else cur = phpNew;\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\n                pending: state.pending};\n      },\n\n      token: dispatch,\n\n      indent: function(state, textAfter, line) {\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\n          return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\n    };\n  }, \"htmlmixed\", \"clike\");\n\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {name: \"php\", startOpen: true});\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, indentUnit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n  // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n  var cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n  \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n  \"explicit export final friend import module mutable namespace new noexcept \" +\n  \"not not_eq operator or or_eq override private protected public \" +\n  \"reinterpret_cast requires static_assert static_cast template this \" +\n  \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\n  var objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n  \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n  \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n  \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n  \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\n  var objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n  \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n  \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n  \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n  // Do not use this. Use the cTypes function below. This is global just to avoid\n  // excessive calls when cTypes is being called multiple times during a parse.\n  var basicCTypes = words(\"int long char short double float unsigned signed \" +\n    \"void bool\");\n\n  // Do not use this. Use the objCTypes function below. This is global just to avoid\n  // excessive calls when objCTypes is being called multiple times during a parse.\n  var basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n  // Returns true if identifier is a \"C\" type.\n  // C type is defined as those that are reserved by the compiler (basicTypes),\n  // and those that end in _t (Reserved by POSIX for types)\n  // http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n  function cTypes(identifier) {\n    return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n  }\n\n  // Returns true if identifier is a \"Objective C\" type.\n  function objCTypes(identifier) {\n    return cTypes(identifier) || contains(basicObjCTypes, identifier);\n  }\n\n  var cBlockKeywords = \"case do else for if switch while struct enum union\";\n  var cDefKeywords = \"struct enum union\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"type\") return \"type\";\n    return false;\n  }\n\n  // For C and C++ (and ObjC): identifiers starting with __\n  // or _ followed by a capital letter are reserved for the compiler.\n  function cIsReservedIdentifier(token) {\n    if (!token || token.length < 2) return false;\n    if (token[0] != '_') return false;\n    return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/^(?:u8|u|U|L)/)) {\n      if (stream.match(/^[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    defKeywords: words(cDefKeywords),\n    typeFirstDefinitions: true,\n    atoms: words(\"NULL true false\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + cppKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords + \" class try catch\"),\n    defKeywords: words(cDefKeywords + \" class namespace\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false NULL nullptr\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class enum def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      }\n    },\n    modeProps: {closeBrackets: {pairs: '()[]{}\"\"', triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam value\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '*': function(_stream, state) {\n        return state.prevToken == '.' ? 'variable' : 'operator';\n      },\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      },\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state)\n      },\n      indent: function(state, ctx, textAfter, indentUnit) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n          return state.indented;\n        if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n          return indentUnit * 2 + ctx.indented;\n        if (ctx.align && ctx.type == \"}\")\n          return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n    dontIndentStatements: /^@.*$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec++\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n    dontIndentStatements: /^@.*$|^template$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: cTypes,\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"type\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"go\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n    \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n    \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n    \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n    \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n    \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n    \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n    \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n    \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n    \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n    \"rune\":true\n  };\n\n  var atoms = {\n    \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n    \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n    \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n    \"println\":true, \"real\":true, \"recover\":true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n      } else {\n        stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n      }\n      return \"number\";\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n      }\n      if (end || !(escaped || quote == \"`\"))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        if (ctx.type == \"case\") ctx.type = \"}\";\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"case\") ctx.type = \"case\";\n      else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n      else if (curPunc == ctx.type) popContext(state);\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n        state.context.type = \"}\";\n        return ctx.indented;\n      }\n      var closing = firstChar == ctx.type;\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}):\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"brace\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-go\", \"go\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\n  var inline = parserConfig.inline\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\n\n  var indentUnit = config.indentUnit,\n      tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true,\n      highlightNonStandardPropertyKeywords = config.highlightNonStandardPropertyKeywords !== false;\n\n  var type, override;\n  function ret(style, tp) { type = tp; return style; }\n\n  // Tokenizers\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return ret(\"variable-2\", \"variable-definition\");\n        return ret(\"variable-2\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n      if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) {\n        state.tokenize = tokenParenthesized;\n      }\n      return ret(\"variable callee\", \"variable\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n    if (!stream.match(/^\\s*[\\\"\\')]/, false))\n      state.tokenize = tokenString(\")\");\n    else\n      state.tokenize = null;\n    return ret(null, \"(\");\n  }\n\n  // Context management\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev)\n      state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--)\n      state.context = state.context.prev;\n    return pass(type, stream, state);\n  }\n\n  // Parser\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word))\n      override = \"atom\";\n    else if (colorKeywords.hasOwnProperty(word))\n      override = \"keyword\";\n    else\n      override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function(type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/i.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/i.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n    return state.context.type;\n  };\n\n  states.block = function(type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override += \" error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function(type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\n      override += \" error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n    return \"prop\";\n  };\n\n  states.propBlock = function(type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\n    return state.context.type;\n  };\n\n  states.parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function(type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variable-3\";\n      return state.context.type;\n    }\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function(type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\n        override = \"keyword\";\n      else if (mediaTypes.hasOwnProperty(word))\n        override = \"attribute\";\n      else if (mediaFeatures.hasOwnProperty(word))\n        override = \"property\";\n      else if (mediaValueKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else if (propertyKeywords.hasOwnProperty(word))\n        override = \"property\";\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n      else if (valueKeywords.hasOwnProperty(word))\n        override = \"atom\";\n      else if (colorKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else\n        override = \"error\";\n    }\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function(type, stream, state) {\n    if (type == \"}\")\n      return popAndPass(type, stream, state);\n    if (type == \"{\")\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\")\n      override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function(type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function(type, stream, state) {\n    if (type == \"{\")\n      return pushContext(state, stream, \"restricted_atBlock\");\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function(type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n    if (type == \"word\") {\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\n        override = \"error\";\n      else\n        override = \"property\";\n      return \"maybeprop\";\n    }\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function(type, stream, state) {\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";\n    else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function(type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    startState: function(base) {\n      return {tokenize: null,\n              state: inline ? \"block\" : \"top\",\n              stateArg: null,\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\n    },\n\n    token: function(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n      override = style;\n      if (type != \"comment\")\n        state.state = states[state.state](type, stream, state);\n      return override;\n    },\n\n    indent: function(state, textAfter) {\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - indentUnit);\n        }\n      }\n      return indent;\n    },\n\n    electricChars: \"}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: lineComment,\n    fold: \"brace\"\n  };\n});\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) {\n      keys[array[i].toLowerCase()] = true;\n    }\n    return keys;\n  }\n\n  var documentTypes_ = [\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\n  ], documentTypes = keySet(documentTypes_);\n\n  var mediaTypes_ = [\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\n    \"tty\", \"tv\", \"embossed\"\n  ], mediaTypes = keySet(mediaTypes_);\n\n  var mediaFeatures_ = [\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\", \"prefers-color-scheme\",\n    \"dynamic-range\", \"video-dynamic-range\"\n  ], mediaFeatures = keySet(mediaFeatures_);\n\n  var mediaValueKeywords_ = [\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\n    \"interlace\", \"progressive\",\n    \"dark\", \"light\",\n    \"standard\", \"high\"\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\n\n  var propertyKeywords_ = [\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\n    \"alignment-baseline\", \"all\", \"anchor-point\", \"animation\", \"animation-delay\",\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backdrop-filter\",\n    \"backface-visibility\", \"background\", \"background-attachment\",\n    \"background-blend-mode\", \"background-clip\", \"background-color\",\n    \"background-image\", \"background-origin\", \"background-position\",\n    \"background-position-x\", \"background-position-y\", \"background-repeat\",\n    \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"block-size\",\n    \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\",\n    \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\",\n    \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\",\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\n    \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\",\n    \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\",\n    \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\",\n    \"border-top\", \"border-top-color\", \"border-top-left-radius\",\n    \"border-top-right-radius\", \"border-top-style\", \"border-top-width\",\n    \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\",\n    \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\",\n    \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\",\n    \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\",\n    \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"contain\",\n    \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\",\n    \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\",\n    \"drop-initial-after-adjust\", \"drop-initial-after-align\",\n    \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\",\n    \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-content\", \"fit-position\",\n    \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\",\n    \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\",\n    \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\",\n    \"font-language-override\", \"font-optical-sizing\", \"font-size\",\n    \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\",\n    \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\",\n    \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\",\n    \"font-variant-position\", \"font-variation-settings\", \"font-weight\", \"gap\",\n    \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\",\n    \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\",\n    \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\",\n    \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\",\n    \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\",\n    \"inset\", \"inset-block\", \"inset-block-end\", \"inset-block-start\", \"inset-inline\",\n    \"inset-inline-end\", \"inset-inline-start\", \"isolation\", \"justify-content\",\n    \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\", \"line-break\",\n    \"line-height\", \"line-height-step\", \"line-stacking\", \"line-stacking-ruby\",\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marks\",\n    \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\",\n    \"marquee-style\", \"mask-clip\", \"mask-composite\", \"mask-image\", \"mask-mode\",\n    \"mask-origin\", \"mask-position\", \"mask-repeat\", \"mask-size\",\"mask-type\",\n    \"max-block-size\", \"max-height\", \"max-inline-size\",\n    \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\",\n    \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\",\n    \"nav-up\", \"object-fit\", \"object-position\", \"offset\", \"offset-anchor\",\n    \"offset-distance\", \"offset-path\", \"offset-position\", \"offset-rotate\",\n    \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\",\n    \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\",\n    \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\",\n    \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\",\n    \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\",\n    \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\",\n    \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\",\n    \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\",\n    \"region-break-after\", \"region-break-before\", \"region-break-inside\",\n    \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\",\n    \"rest-before\", \"richness\", \"right\", \"rotate\", \"rotation\", \"rotation-point\",\n    \"row-gap\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\",\n    \"scale\", \"scroll-behavior\", \"scroll-margin\", \"scroll-margin-block\",\n    \"scroll-margin-block-end\", \"scroll-margin-block-start\", \"scroll-margin-bottom\",\n    \"scroll-margin-inline\", \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\", \"scroll-margin-left\", \"scroll-margin-right\",\n    \"scroll-margin-top\", \"scroll-padding\", \"scroll-padding-block\",\n    \"scroll-padding-block-end\", \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\", \"scroll-padding-inline\", \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\", \"scroll-padding-left\", \"scroll-padding-right\",\n    \"scroll-padding-top\", \"scroll-snap-align\", \"scroll-snap-type\",\n    \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\",\n    \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\",\n    \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\",\n    \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\",\n    \"text-align\", \"text-align-last\", \"text-combine-upright\", \"text-decoration\",\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\n    \"text-decoration-skip-ink\", \"text-decoration-style\", \"text-emphasis\",\n    \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\",\n    \"text-height\", \"text-indent\", \"text-justify\", \"text-orientation\",\n    \"text-outline\", \"text-overflow\", \"text-rendering\", \"text-shadow\",\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\",\n    \"text-underline-position\", \"text-wrap\", \"top\", \"touch-action\", \"transform\", \"transform-origin\",\n    \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\",\n    \"transition-property\", \"transition-timing-function\", \"translate\",\n    \"unicode-bidi\", \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\",\n    \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\",\n    \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\",\n    \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\",\n    // SVG-specific\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\n    \"color-interpolation\", \"color-interpolation-filters\",\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"paint-order\", \"shape-rendering\", \"stroke\",\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\",\n  ], propertyKeywords = keySet(propertyKeywords_);\n\n  var nonStandardPropertyKeywords_ = [\n    \"accent-color\", \"aspect-ratio\", \"border-block\", \"border-block-color\", \"border-block-end\",\n    \"border-block-end-color\", \"border-block-end-style\", \"border-block-end-width\",\n    \"border-block-start\", \"border-block-start-color\", \"border-block-start-style\",\n    \"border-block-start-width\", \"border-block-style\", \"border-block-width\",\n    \"border-inline\", \"border-inline-color\", \"border-inline-end\",\n    \"border-inline-end-color\", \"border-inline-end-style\",\n    \"border-inline-end-width\", \"border-inline-start\", \"border-inline-start-color\",\n    \"border-inline-start-style\", \"border-inline-start-width\",\n    \"border-inline-style\", \"border-inline-width\", \"content-visibility\", \"margin-block\",\n    \"margin-block-end\", \"margin-block-start\", \"margin-inline\", \"margin-inline-end\",\n    \"margin-inline-start\", \"overflow-anchor\", \"overscroll-behavior\", \"padding-block\", \"padding-block-end\",\n    \"padding-block-start\", \"padding-inline\", \"padding-inline-end\",\n    \"padding-inline-start\", \"scroll-snap-stop\", \"scrollbar-3d-light-color\",\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\n    \"scrollbar-track-color\", \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"shape-inside\", \"zoom\"\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\n\n  var fontProperties_ = [\n    \"font-display\", \"font-family\", \"src\", \"unicode-range\", \"font-variant\",\n     \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"\n  ], fontProperties = keySet(fontProperties_);\n\n  var counterDescriptors_ = [\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\n  ], counterDescriptors = keySet(counterDescriptors_);\n\n  var colorKeywords_ = [\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkgrey\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkslategrey\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dimgrey\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightgrey\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightslategrey\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n  ], colorKeywords = keySet(colorKeywords_);\n\n  var valueKeywords_ = [\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\n    \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"blur\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"brightness\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\n    \"compact\", \"condensed\", \"contain\", \"content\", \"contents\",\n    \"content-box\", \"context-menu\", \"continuous\", \"contrast\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\n    \"cross\", \"crosshair\", \"cubic-bezier\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\n    \"dot-dash\", \"dot-dot-dash\",\n    \"dotted\", \"double\", \"down\", \"drop-shadow\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"grayscale\", \"graytext\", \"grid\", \"groove\",\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"hue-rotate\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"manipulation\", \"match\", \"matrix\", \"matrix3d\",\n    \"media-controls-background\", \"media-current-time-display\",\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"myanmar\", \"n-resize\",\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\",\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\n    \"relative\", \"repeat\", \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\n    \"s-resize\", \"sans-serif\", \"saturate\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"sepia\", \"serif\", \"show\", \"sidama\",\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\",\n    \"subpixel-antialiased\", \"svg_masks\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\n    \"tamil\",\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\",\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\n    \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\", \"visiblePainted\",\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\n    \"xx-large\", \"xx-small\"\n  ], valueKeywords = keySet(valueKeywords_);\n\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\n    .concat(valueKeywords_);\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return [\"comment\", \"comment\"];\n  }\n\n  CodeMirror.defineMIME(\"text/css\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-scss\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \":\": function(stream) {\n        if (stream.match(/^\\s*\\{/, false))\n          return [null, null]\n        return false;\n      },\n      \"$\": function(stream) {\n        stream.match(/^[\\w-]+/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"#\": function(stream) {\n        if (!stream.eat(\"{\")) return false;\n        return [null, \"interpolation\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"scss\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-less\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \"@\": function(stream) {\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"&\": function() {\n        return [\"atom\", \"atom\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"less\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-gss\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    supportsAtComponent: true,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\",\n    helperType: \"gss\"\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode(\"rust\",{\n  start: [\n    // string and byte string\n    {regex: /b?\"/, token: \"string\", next: \"string\"},\n    // raw string and raw byte string\n    {regex: /b?r\"/, token: \"string\", next: \"string_raw\"},\n    {regex: /b?r#+\"/, token: \"string\", next: \"string_raw_hash\"},\n    // character\n    {regex: /'(?:[^'\\\\]|\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\}))'/, token: \"string-2\"},\n    // byte\n    {regex: /b'(?:[^']|\\\\(?:['\\\\nrt0]|x[\\da-fA-F]{2}))'/, token: \"string-2\"},\n\n    {regex: /(?:(?:[0-9][0-9_]*)(?:(?:[Ee][+-]?[0-9_]+)|\\.[0-9_]+(?:[Ee][+-]?[0-9_]+)?)(?:f32|f64)?)|(?:0(?:b[01_]+|(?:o[0-7_]+)|(?:x[0-9a-fA-F_]+))|(?:[0-9][0-9_]*))(?:u8|u16|u32|u64|i8|i16|i32|i64|isize|usize)?/,\n     token: \"number\"},\n    {regex: /(let(?:\\s+mut)?|fn|enum|mod|struct|type|union)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/, token: [\"keyword\", null, \"def\"]},\n    {regex: /(?:abstract|alignof|as|async|await|box|break|continue|const|crate|do|dyn|else|enum|extern|fn|for|final|if|impl|in|loop|macro|match|mod|move|offsetof|override|priv|proc|pub|pure|ref|return|self|sizeof|static|struct|super|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, token: \"keyword\"},\n    {regex: /\\b(?:Self|isize|usize|char|bool|u8|u16|u32|u64|f16|f32|f64|i8|i16|i32|i64|str|Option)\\b/, token: \"atom\"},\n    {regex: /\\b(?:true|false|Some|None|Ok|Err)\\b/, token: \"builtin\"},\n    {regex: /\\b(fn)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/,\n     token: [\"keyword\", null ,\"def\"]},\n    {regex: /#!?\\[.*\\]/, token: \"meta\"},\n    {regex: /\\/\\/.*/, token: \"comment\"},\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n    {regex: /[a-zA-Z_]\\w*!/,token: \"variable-3\"},\n    {regex: /[a-zA-Z_]\\w*/, token: \"variable\"},\n    {regex: /[\\{\\[\\(]/, indent: true},\n    {regex: /[\\}\\]\\)]/, dedent: true}\n  ],\n  string: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\\\\\"]|\\\\(?:.|$))*/, token: \"string\"}\n  ],\n  string_raw: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /[^\"]*/, token: \"string\"}\n  ],\n  string_raw_hash: [\n    {regex: /\"#+/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\"]|\"(?!#))*/, token: \"string\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  meta: {\n    dontIndentStates: [\"comment\"],\n    electricInput: /^\\s*\\}$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  }\n});\n\n\nCodeMirror.defineMIME(\"text/x-rustsrc\", \"rust\");\nCodeMirror.defineMIME(\"text/rust\", \"rust\");\n});\n","module.exports = __webpack_public_path__ + \"img/logo.45d721ab.png\";","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatibility with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(rb)|(fr)|(rf))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) {\n        state.beginningOfLine = true;\n        state.dedent = false;\n      }\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent = true;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n        state.scopes.pop();\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state)\n        var closing = scope.type == textAfter.charAt(0) ||\n            scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var trackScope = parserConfig.trackScope !== false\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\" && stream.peek() == \"!\") {\n      stream.skipToEnd();\n      return ret(\"meta\", \"meta\");\n    } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n      return ret(\"variable\", \"property\")\n    } else if (ch == \"<\" && stream.match(\"!--\") ||\n               (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-|&?]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true,\n                     \"regexp\": true, \"this\": true, \"import\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    if (!trackScope) return false\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (!trackScope) return\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), pushblockcontext, forspec, statement, popcontext, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(maybeexpression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(maybeexpression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\" || value == \"readonly\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n    if (type == \"quasi\") { return pass(quasiType, afterType); }\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprops(type) {\n    if (type.match(/[\\}\\)\\]]/)) return cont()\n    if (type == \",\" || type == \";\") return cont(typeprops)\n    return pass(typeprop, typeprops)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    } else if (!type.match(/[;\\}\\)\\],]/)) {\n      return cont()\n    }\n  }\n  function quasiType(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasiType);\n    return cont(typeexpr, continueQuasiType);\n  }\n  function continueQuasiType(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasiType);\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(classfield, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"!\") return cont(classfield)\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    if (type == \".\") return pass(maybeoperatorComma);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse && c != popcontext) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      parseJS(state, \"atom\", \"atom\", \"true\", new CodeMirror.StringStream(\"\", 2, null))\n    }\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", { name: \"javascript\", json: true });\nCodeMirror.defineMIME(\"application/x-json\", { name: \"javascript\", json: true });\nCodeMirror.defineMIME(\"application/manifest+json\", { name: \"javascript\", json: true })\nCodeMirror.defineMIME(\"application/ld+json\", { name: \"javascript\", jsonld: true });\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});\n"],"sourceRoot":""}
